package ${rootPackageName}.application${aliasPackageName};

import cn.hutool.core.bean.BeanUtil;
import com.feng.framework.api.vo.PageRequest;
import com.feng.framework.api.vo.PageResult;
import ${rootPackageName}.dto${aliasPackageName}.${table.tableName,TCaseCamle}Dto;
import ${rootPackageName}.service${aliasPackageName}.${table.tableName,TCaseCamle}Service;
import ${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Req;
import ${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

/**
 * @description ${table.tableRemark}  service层实现类
 * @author ${codeAuthor}
 * @date ${dateStr}
 */
@Service
public class ${table.tableName,TCaseCamle}ApplicationImpl implements ${table.tableName,TCaseCamle}Application {

    @Autowired
    private ${table.tableName,TCaseCamle}Service ${table.tableName,Camle}Service;

    /**
     * id查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param id
     * @return ${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Resp
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @Override
    public ${table.tableName,TCaseCamle}Resp get${table.tableName,TCaseCamle}ById(Long id) {
        ${table.tableName,TCaseCamle}Dto dto = ${table.tableName,Camle}Service.get${table.tableName,TCaseCamle}ById(id);
        if(dto == null){
            return null;
        }
        ${table.tableName,TCaseCamle}Resp resp = BeanUtil.toBean(dto, ${table.tableName,TCaseCamle}Resp.class);
        return resp;
    }

    /**
     * id列表查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param idList
     * @return java.util.List<${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Resp>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @Override
    public List<${table.tableName,TCaseCamle}Resp> get${table.tableName,TCaseCamle}ListById(List<Long> idList) {
        List<${table.tableName,TCaseCamle}Resp> resultList = new ArrayList<>();
        List<${table.tableName,TCaseCamle}Dto> dtoList = ${table.tableName,Camle}Service.get${table.tableName,TCaseCamle}ListById(idList);
        if(dtoList.size() == 0){
            return resultList;
        }
        for(${table.tableName,TCaseCamle}Dto dto : dtoList){
            ${table.tableName,TCaseCamle}Resp resp = BeanUtil.toBean(dto, ${table.tableName,TCaseCamle}Resp.class);
            resultList.add(resp);
        }
        return resultList;
    }

    /**
     * 对象查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param req
     * @return ${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Resp
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @Override
    public ${table.tableName,TCaseCamle}Resp get${table.tableName,TCaseCamle}(${table.tableName,TCaseCamle}Req req) {
        ${table.tableName,TCaseCamle}Dto dto = BeanUtil.toBean(req, ${table.tableName,TCaseCamle}Dto.class);
        ${table.tableName,TCaseCamle}Dto resultDto = ${table.tableName,Camle}Service.get${table.tableName,TCaseCamle}(dto);
        if(resultDto == null) {
            return null;
        }
        ${table.tableName,TCaseCamle}Resp resp = BeanUtil.toBean(dto, ${table.tableName,TCaseCamle}Resp.class);
        return resp;
    }

    /**
     * 批量查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param req
     * @return java.util.List<${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Resp>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @Override
    public List<${table.tableName,TCaseCamle}Resp> get${table.tableName,TCaseCamle}List(${table.tableName,TCaseCamle}Req req) {
        ${table.tableName,TCaseCamle}Dto dto = BeanUtil.toBean(req, ${table.tableName,TCaseCamle}Dto.class);
        List<${table.tableName,TCaseCamle}Dto> resultDtos = ${table.tableName,Camle}Service.get${table.tableName,TCaseCamle}List(dto);
        List<${table.tableName,TCaseCamle}Resp> resultList = new ArrayList<>();
        for(${table.tableName,TCaseCamle}Dto resultDto : resultDtos) {
            ${table.tableName,TCaseCamle}Resp resp = BeanUtil.toBean(dto, ${table.tableName,TCaseCamle}Resp.class);
            resultList.add(resp);
        }
        return resultList;
    }

    /**
     * 分页查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param vo
     * @param pageRequest
     * @return com.feng.framework.api.vo.PageResult<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @Override
    public PageResult<${table.tableName,TCaseCamle}Resp> get${table.tableName,TCaseCamle}PageList(${table.tableName,TCaseCamle}Req req, PageRequest pageRequest) {
        PageResult<${table.tableName,TCaseCamle}Resp> pageResult= new PageResult<${table.tableName,TCaseCamle}Resp>();
        ${table.tableName,TCaseCamle}Dto paramDto = BeanUtil.toBean(req, ${table.tableName,TCaseCamle}Dto.class);
        PageResult<${table.tableName,TCaseCamle}Dto> dtoPageResult = ${table.tableName,Camle}Service.get${table.tableName,TCaseCamle}PageList(paramDto, pageRequest);

        List<${table.tableName,TCaseCamle}Resp> list = new ArrayList<>();
        pageResult.setList(list);
        pageResult.setCount(dtoPageResult.getCount());
        pageResult.setPageCount(dtoPageResult.getPageCount());
        for(${table.tableName,TCaseCamle}Dto dto : dtoPageResult.getList()) {
            ${table.tableName,TCaseCamle}Resp resp = BeanUtil.toBean(dto, ${table.tableName,TCaseCamle}Resp.class);
            list.add(resp);
        }

        return pageResult;
    }

}
