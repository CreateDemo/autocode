package ${rootPackageName}.controller${aliasPackageName};


import com.feng.framework.api.vo.PageRequest;
import com.feng.framework.api.vo.PageResult;
import com.feng.framework.api.vo.Response;
import com.feng.framework.core.controller.BaseController;
import ${rootPackageName}.application${aliasPackageName}.${table.tableName,TCaseCamle}Application;
import ${rootPackageName}.vo.req${aliasPackageName}.${table.tableName,TCaseCamle}Req;
import ${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp;
import io.swagger.annotations.Api;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * @description ${table.tableRemark} 控制器
 * @author ${codeAuthor}
 * @date ${dateStr}
 */
@RestController
@RequestMapping("/api/${table.tableName,Camle}")
@Slf4j
@Api(value = "", tags = "")
public class ${table.tableName,TCaseCamle}Controller extends BaseController{

    @Autowired
    private ${table.tableName,TCaseCamle}Application ${table.tableName,Camle}Application;

    /**
     * id查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param id
     * @return com.feng.framework.api.vo.Response<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @GetMapping("/get${table.tableName,TCaseCamle}ById")
    public Response<${table.tableName,TCaseCamle}Resp> get${table.tableName,TCaseCamle}ById(Long id) {
        ${table.tableName,TCaseCamle}Resp resp = ${table.tableName,Camle}Application.get${table.tableName,TCaseCamle}ById(id);
        return Response.buildSuccessResponseWithInfo(resp);
    }

    /**
     * id批量查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param idList
     * @return com.feng.framework.api.vo.Response<java.util.List<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @GetMapping("/get${table.tableName,TCaseCamle}ListById")
    public Response<List<${table.tableName,TCaseCamle}Resp>> get${table.tableName,TCaseCamle}ListById(List<Long> idList) {
        List<${table.tableName,TCaseCamle}Resp> respList = ${table.tableName,Camle}Application.get${table.tableName,TCaseCamle}ListById(idList);
        return Response.buildSuccessResponseWithInfo(respList);
    }

    /**
     * 对象查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param req
     * @return com.feng.framework.api.vo.Response<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @GetMapping("/get${table.tableName,TCaseCamle}")
    public Response<${table.tableName,TCaseCamle}Resp> get${table.tableName,TCaseCamle}(${table.tableName,TCaseCamle}Req req) {
        ${table.tableName,TCaseCamle}Resp resp = ${table.tableName,Camle}Application.get${table.tableName,TCaseCamle}(req);
        return Response.buildSuccessResponseWithInfo(resp);
    }

    /**
     * 对象批量查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param req
     * @return com.feng.framework.api.vo.Response<java.util.List<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @GetMapping("/get${table.tableName,TCaseCamle}List")
    public Response<List<${table.tableName,TCaseCamle}Resp>> get${table.tableName,TCaseCamle}List(${table.tableName,TCaseCamle}Req req) {
        List<${table.tableName,TCaseCamle}Resp> respList = ${table.tableName,Camle}Application.get${table.tableName,TCaseCamle}List(req);
        return Response.buildSuccessResponseWithInfo(respList);
    }

    /**
     * 分页查询
     * --代码生成器自动生成。若使用请删除此行注释，如果无调用则将整个方法删除，以免他人误用
     * @param req
     * @param pageRequest
     * @return com.feng.framework.api.vo.Response<com.feng.framework.api.vo.PageResult<${rootPackageName}.vo.resp${aliasPackageName}.${table.tableName,TCaseCamle}Resp>>
     * @author ${codeAuthor}
     * @date ${dateStr}
     */
    @GetMapping("/get${table.tableName,TCaseCamle}PageList")
    public Response<PageResult<${table.tableName,TCaseCamle}Resp>> get${table.tableName,TCaseCamle}PageList(PageRequest pageRequest, ${table.tableName,TCaseCamle}Req req) {
        PageResult<${table.tableName,TCaseCamle}Resp> pageResult = ${table.tableName,Camle}Application.get${table.tableName,TCaseCamle}PageList(req, pageRequest);
        return  Response.buildSuccessResponseWithInfo(pageResult);
    }

}
